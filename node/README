Main or entry file
------------------
Use node-test as your main or entry point. This is not a requirement though. You can use any suitable entry point. This is an example.

Compiling your coffee script files and running your node application
--------------------------------------------------------------------

All CoffeScript source files are kept under node/src

To compile your CoffeeScript source files under src and output them under target do:

coffee -co target src

Defining database connections
-----------------------------

Modify ../javascript/test_bench/uacdb.coffee and specify connections details. Then include the module in your source file as:

knex = require("#{APPROOT}/target/main/javascript/test_bench/uacdb").Knex

in order to write knex queries.


Including a submodule from another module
-----------------------------------------

To include a submodule in another module, require it in your module using the APPROOT as the path to your application

e.g.

APPROOT = require('app-root-path')
submodule = require"#{APPROOT}/target/[path to submodule]"

Notice we are requiring the generated Javascript file not the CoffeeScript file that was used to generate it.

Running your application
------------------------

node target/lib/node-test.js


Installing a node package to use with your application
------------------------------------------------------

To install a pacakge as a project dependency use --save:
npm install [package-name] --save

To install a package as a development dependency use --save-dev:
npm install --save-dev [package-name]

Note: Use --save so that the version number is captured and the package maintained through package.json

Once your package is installed, access it in your code via require as follows:

package = require 'package'


Running Unit tests
------------------

Install Mocha as a development dependency if it has not been installed:

npm install --save-dev mocha

Create unit tests under src/test/javascript

Compile your source files including your unit tests:

coffee -co target src

Run your unit test:

./node_modules/mocha/bin/mocha target/test/javascript/[path-to-your-test-file]

e.g.

./node_modules/mocha/bin/mocha target/test/javascript/test_bench/countries-test.js


Running standalone files
------------------------

If you want to take advantage of the import capabilities of npm and require, create a file in src/main/javascript use
require to import the files that are installed in node_modules and run your tests using the coffee compiler as:

coffee <path-to-file>

If your file is under the node_modules directory you can just require files by using the package name:

e.g. _ = require 'underscore'

If your file is not under the node_modules directory then you will have to give the file path:

e.g. _ =  require('/usr/local/lib/node_modules/underscore')


